# usal function

def add (tuple_1, tuple_2) :
    return tuple_1[0] + tuple_2[0], tuple_1[1] + tuple_2[1]

def sector (x,y) :
    sector = {'1': [0,5,0,5],  '2' : [0,5,5,10],  '3' : [0,5,10,15],
              '4': [5,10,0,5],  '5' : [5,10,5,10],  '6' : [5,10,10,15],
              '7': [10,15,0,5],'8' : [10,15,5,10],'9' : [10,15,10,15]}
    for i in '123456789' :
        if sector[i][0] <= x <= sector[i][1] and sector[i][2] <= y < sector[i][3] : return i
    return 'x'

def move (direction,laps) :
    l_ = laps + 1
    step = { 'N' : [(-1,0,l_)], 
             'S' : [(1,0,l_)], 
             'E' : [(0,1,l_)], 
             'O' : [(0,-1,l_)], 
            'Silence' : [(-3,0,l_),(-2,0,l_),(-1,0,l_),(0,-3,l_),(0,-2,l_),(0,-1,l_)]}
    return step[direction]

# parameters

max_path = 5
side = 15

# Function to brows paths, endures silences
# ne fonctionnne qu'avec un seul silence
path = [[(1,1)],[(1,2)],[(1,3)],[(1,4),(2,4),(3,4)],[(-1,5)],[(-1,6)],[(-1,7)]]

i,j = 0,0
loop = 'o'

while True :
    if i == len(path) :
        if loop == 'o': i = 0
        else : break 
    if len(path[i]) == 1 : print(path[i][0])
    else :
            print(path[i][j])
            j += 1
            if j == len(path[i]) : loop = 'x'
    i = path[i][0][1]


# map 

width, height, my_id = [int(i) for i in input().split()] # we use 'side' witch is 15

island, already = [],[]
for y in range(height):
    line = input()
    for x in range(width) :
        if line[x] == 'x' : island.append((x,y)) # x -> island else .

# Firt lap
r = (0,0)
if (7,7) not in island : r = (7,7)
elif (4,5) not in island : r = (4,5)
elif (9,5) not in island : r = (9,5)
elif (9,9) not in island : r = (9,9)
elif (5,9) not in island : r = (5,9)
else : r = (2,7)
print(*r) 

# game loop
while True:
    x, y, my_life, his_life, torpedo, sonar, silence, mc = [int(i) for i in input().split()]
    sonar_result = input()
    his_order = input().replace('|', ' ').split()
    already.append((x,y))
    decision, max_, isit = d_isit(his_order, max_, island)
    if decision != 'wait' : z, result = hunt(x, y, isit, already, torpedo)
    else : z, result = wait(x, y, silence, island, already)
    if z == 'x' : already = []
    print(result)
        # f'| MSG {isit}'

"""
# entr√©e
path = []
direction = ['N','N','N','O','O','Silence','S','S']
for i in range(len(direction)) :
    path.append(move(direction[i],i))

def run_path(path):
# list of list of tuples : [(x,y,laps)],[()],[(),(),()],[()]
    i,j = 0,0
    loop = 'o'
    while True :
        if i == len(path) :
            if loop == 'o': i = 0
            else : break 
        if len(path[i]) == 1 : print(path[i][0][0:2])
        else :
                print(path[i][j][0:2])
                j += 1
                if j == len(path[i]) : loop = 'x'
        i = path[i][0][2]
print(run_path(path))
"""
